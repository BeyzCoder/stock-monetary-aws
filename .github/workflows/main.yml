name: Stock Monetary AWS CI/CD

on:
  # Trigger the workflow on push
  push:
    branches:
      # Push events on master branch
      - master

jobs:

  Continuous-Integrate:
    # Define the OS in the workflow
    runs-on: ubuntu-latest
    steps:
      # Check out repo so our workflow can access it
      - uses: actions/checkout@v2

      # Set up python
      - name: Set up Python
        # This action sets up a Python environment for use in actions
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      
      # Install python virtual ENV
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv

      # Set up virtual ENV
      # caching dependencies to speed up workflow
      - name: Virtual ENV
        uses: actions/cache@v2
        id: cache-venv    # name for referring later
        with:
          path: venv      # what we cache: the Virtual ENV
          # The cache key depends on requirements.txt
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-venv-

      # Build a virtual env, if it doesn't exist.
      - name: Activate Virtual ENV
        run: python -m venv venv && source venv/bin/activate && pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run Tests
        # Note that you have to activate the virtualenv in every step
        run: . venv/bin/activate && pytest
      
      - name: Create Archive of Dependencies
        run: |
          cd ./venv/lib/python3.8/site-packages
          zip -r9 ../../../../api.zip .
      
      - name: Add API Files to ZIP file
        run: cd ./api && zip -g ../api.zip -r .
      
      - name: Upload ZIP File Artifact
        # uploads artifacts from your workflow allowing you to share data between jobs
        # Store data once a workflow is complete
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip

  Continuous-Deployment:
    runs-on: ubuntu-latest
    needs: [Continuous-Integrate]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      
      - name: Upload to S3
        run: aws s3 cp api.zip s3://stockfuncbucket/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name stock-monetary-fastapi --s3-bucket stockfuncbucket --s3-key api.zip 
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_SECRET_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}